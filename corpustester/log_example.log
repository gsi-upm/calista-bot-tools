Oct 22 11:16:16 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Unitex input: Hola
Oct 22 11:16:16 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Unitex output: hola
Oct 22 11:16:16 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript input: hola
Oct 22 11:16:16 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript output: Hola.
Oct 22 11:16:22 localhost calistabot: INFO gsibot - [user: =tIrWirqds21zejT1OHrt] Unitex input: que es un for?
Oct 22 11:16:22 localhost calistabot: INFO gsibot - [user: =tIrWirqds21zejT1OHrt] Unitex output: [sendcs (java question for)]
Oct 22 11:16:22 localhost calistabot: INFO gsibot - [user: =tIrWirqds21zejT1OHrt] ChatScript input: [sendcs (java question for)]
Oct 22 11:16:22 localhost calistabot: INFO gsibot - [user: =tIrWirqds21zejT1OHrt] ChatScript output: For es un palabra reservada. Los bucles for se ejecutan un numero determinado de veces.. Puedes preguntarme tambien sobre while, dowhile, bucles.  @fullresponse [sendmaia assert explained (concept for ) ]
Oct 22 11:30:03 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Unitex input: que es un while?
Oct 22 11:30:03 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Unitex output: [sendcs (java question while)]
Oct 22 11:30:03 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript input: [sendcs (java question while)]
Oct 22 11:30:03 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript output: While es un palabra reservada. Se usa para construir bucles que se ejecutan cero o mas veces.. Puedes preguntarme tambien sobre dowhile, for, bucles.  @fullresponse [sendmaia assert explained (concept while ) ]
Oct 22 11:30:03 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Sending to Maia {"name":"message","data": {"name" : "[assert explained (concept while ) ] [user =tIrWirqRq21zejT1OHrt]"}}
Oct 22 11:30:04 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Received not-json message from maia.
Oct 22 11:30:30 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Unitex input: que es un interface?
Oct 22 11:30:30 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Unitex output: [sendcs (java question interface)]
Oct 22 11:30:30 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript input: [sendcs (java question interface)]
Oct 22 11:30:30 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript output: [sendmaia retrieve interface ]
Oct 22 11:30:30 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Sending to Maia {"name":"message","data": {"name" : "[retrieve interface ] [user =tIrWirqRq21zejT1OHrt]"}}
Oct 22 11:30:30 demos.gsi.dit.upm.es calistabot: INFO  SIRENSLog - [[user =tIrWirqRq21zejT1OHrt]] Searching keyword 'interface 
Oct 22 11:30:30 demos.gsi.dit.upm.es calistabot: ERROR SIRENSLog - q: ('label' : +'interface'), n: 1000
Oct 22 11:30:30 demos.gsi.dit.upm.es calistabot: INFO  SIRENSLog - [[user =tIrWirqRq21zejT1OHrt]] Answering >> {"content":"Es un elemento java que dice lo que se ofrece; pero no dice cómo se hace.Una interface proporciona: valores constantes, que son variables public static final(no hace falta escribir estos modificadores: se sobreentienden) métodos, que son public(no hace falta escribir el modificador: se sobreentiende) NO incluye constructoresLas interfaces pueden extenderse con nuevas constantes y/o métodos pueden implementarse totalmente dando lugar a una clase que debe proporcionar código para todos y cada uno de los métodos definidos pueden implementarse parcialmente dando lugar a una clase abstracta ","resource":"http://www.dit.upm.es/~pepe/libros/vademecum/topics/176.html","links_to":[{"label":"otros_conceptos"}],"label":"interface","topic":"palabra reservada","example":"  /* public static final */ int CONSTANTE = 99;  /* public */ void metodoA();  /* public */ void metodoB();  public void metodoA() { código }  public void metodoA() { código }"}
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Received not-json message from maia.
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Updating ChatScript knowledge base kb- java
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript input: [sendcs [ import facts/kb-java interface ] ]
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript output: [sendcs (java question interface ) ]
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript input: [sendcs (java question interface ) ]
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] ChatScript output: Interface es un palabra reservada. Es un elemento java que dice lo que se ofrece; pero no dice como se hace.Una interface proporciona: valores constantes, que son variables public static final(no hace falta escribir estos modificadores: se sobreentienden) metodos, que son public(no hace falta escribir el modificador: se sobreentiende) NO incluye constructoresLas interfaces pueden extenderse con nuevas constantes y/o metodos pueden implementarse totalmente dando lugar a una clase que debe proporcionar codigo para todos y cada uno de los metodos definidos pueden implementarse parcialmente dando lugar a una clase abstracta . Puedes preguntarme tambien sobre otros conceptos.  @fullresponse [sendmaia assert explained (concept interface ) ]
Oct 22 11:30:31 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Sending to Maia {"name":"message","data": {"name" : "[assert explained (concept interface ) ] [user =tIrWirqRq21zejT1OHrt]"}}
Oct 22 11:30:32 localhost calistabot: INFO gsibot - [user: =tIrWirqRq21zejT1OHrt] Received not-json message from maia.